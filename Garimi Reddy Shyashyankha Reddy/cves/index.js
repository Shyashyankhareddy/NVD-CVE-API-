let startIndex = 0;
let resultsPerPage = 10;

function renderTable(data) {
	const div = document.getElementById('tableContainer');
	const table = document.getElementById('dataTable');
	table.innerHTML = `<tr class="headRow">
						<td>CVE ID</td>
						<td>IDENTIFIER</td>
						<td>PUBLISHED DATE</td>
						<td>LAST MODIFIED DATE</td>
						<td>STATUS</td>
					</tr>`;
	console.log(data);

	data.vulnerabilities.sort((a, b) => {
		return new Date(b.lastModified) - new Date(a.lastModified);
	});

	data.vulnerabilities.forEach((item) => {
		const row = document.createElement('tr');
		Object.values(item).forEach((value) => {
			const cell1 = document.createElement('td');
			cell1.textContent = value.id;
			const cell2 = document.createElement('td');
			cell2.textContent = value.sourceIdentifier;
			const cell3 = document.createElement('td');
			cell3.textContent = value.published;
			const cell4 = document.createElement('td');
			cell4.textContent = value.lastModified;
			const cell5 = document.createElement('td');
			cell5.textContent = value.vulnStatus;
			row.appendChild(cell1);
			row.appendChild(cell2);
			row.appendChild(cell3);
			row.appendChild(cell4);
			row.appendChild(cell5);
		});
		table.appendChild(row);
	});
	div.appendChild(table);
}

function fetchData(startIndex) {
	fetch(
		`https://services.nvd.nist.gov/rest/json/cves/2.0/?resultsPerPage=${resultsPerPage}&startIndex=${startIndex}`
	)
		.then((response) => response.json())
		.then((data) => {
			console.log(data);
			data = data;
			renderTable(data);
		})
		.catch((error) => {
			console.error(error);
		});
}

// Initial fetch
fetchData(startIndex);

// Next button click event handler
const nextButton = document.getElementById('nextButton');
nextButton.addEventListener('click', () => {
	startIndex += resultsPerPage;
	fetchData(startIndex);
});

const backButton = document.getElementById('backButton');
backButton.addEventListener('click', () => {
	if (startIndex > 0) startIndex -= resultsPerPage;
	fetchData(startIndex);
});

const dropDown = document.getElementById('dropDown');
dropDown.addEventListener('change', (event) => {
	resultsPerPage = parseInt(event.target.value);
	startIndex = 0;
	fetchData(startIndex);
});

const table = document.getElementById('dataTable');
table.addEventListener('click', (event) => {
	const target = event.target;
	if (target.tagName === 'TD') {
		const row = target.parentNode;
		const idNumber = row.firstChild.textContent;
		// window.location.href = `ID?id=12`;
		window.location.href = `ID.html?id=${idNumber}`;
	}
});

const sortForLastModified = document.getElementById('sortLastModified');
sortForLastModified.addEventListener('click', () => {
	const table = document.getElementById('dataTable');
	const rows = Array.from(table.rows).slice(1);
	rows.sort((a, b) => {
		const date1 = new Date(a.cells[3].textContent);
		const date2 = new Date(b.cells[3].textContent);
		return date2 - date1;
	});
	table.innerHTML = `<tr class="headRow">
						<td>CVE ID</td>
						<td>IDENTIFIER</td>
						<td>PUBLISHED DATE</td>
						<td>LAST MODIFIED DATE</td>
						<td>STATUS</td>
					</tr>`;
	rows.forEach((row) => table.appendChild(row));
});

const sortPublished = document.getElementById('sortPublished');
sortPublished.addEventListener('click', () => {
	const table = document.getElementById('dataTable');
	const rows = Array.from(table.rows).slice(1);
	rows.sort((a, b) => {
		const date1 = new Date(a.cells[2].textContent);
		const date2 = new Date(b.cells[2].textContent);
		return date2 - date1;
	});
	table.innerHTML = `<tr class="headRow">
						<td>CVE ID</td>
						<td>IDENTIFIER</td>
						<td>PUBLISHED DATE</td>
						<td>LAST MODIFIED DATE</td>
						<td>STATUS</td>
					</tr>`;
	rows.forEach((row) => table.appendChild(row));
});
