var ID = window.location.href.split('?')[1].split('=')[1];
// console.log(ID);

function renderData(data) {
	document.getElementById('heading').innerHTML = ID;
	document.getElementById('description').innerHTML =
		data.vulnerabilities[0].cve.descriptions[0].value;
	document.getElementById('severity').innerHTML =
		'<b>Severity: </b>' +
		data.vulnerabilities[0].cve.metrics.cvssMetricV2[0].baseSeverity;

	document.getElementById('score').innerHTML =
		'<b>Score: </b>' +
		data.vulnerabilities[0].cve.metrics.cvssMetricV2[0].impactScore;
	document.getElementById('vString').innerHTML =
		'<b>Vector String: </b>' +
		data.vulnerabilities[0].cve.metrics.cvssMetricV2[0].cvssData.vectorString;
	const row = document.createElement('tr');
	const cell1 = document.createElement('td');
	cell1.textContent =
		data.vulnerabilities[0].cve.metrics.cvssMetricV2[0].cvssData.accessVector;
	const cell2 = document.createElement('td');
	cell2.textContent =
		data.vulnerabilities[0].cve.metrics.cvssMetricV2[0].cvssData.accessComplexity;
	const cell3 = document.createElement('td');
	cell3.textContent =
		data.vulnerabilities[0].cve.metrics.cvssMetricV2[0].cvssData.authentication;
	const cell4 = document.createElement('td');
	cell4.textContent =
		data.vulnerabilities[0].cve.metrics.cvssMetricV2[0].cvssData.confidentialityImpact;
	const cell5 = document.createElement('td');
	cell5.textContent =
		data.vulnerabilities[0].cve.metrics.cvssMetricV2[0].cvssData.integrityImpact;
	const cell6 = document.createElement('td');
	cell6.textContent =
		data.vulnerabilities[0].cve.metrics.cvssMetricV2[0].cvssData.availabilityImpact;
	row.appendChild(cell1);
	row.appendChild(cell2);
	row.appendChild(cell3);
	row.appendChild(cell4);
	row.appendChild(cell5);
	row.appendChild(cell6);
	document.getElementById('cvssTable').appendChild(row);

	document.getElementById('eScore').innerHTML =
		'<b>Exploitablitiy Score: </b>' +
		data.vulnerabilities[0].cve.metrics.cvssMetricV2[0].exploitabilityScore;
	document.getElementById('iScore').innerHTML =
		'<b>Impact Score: </b>' +
		data.vulnerabilities[0].cve.metrics.cvssMetricV2[0].impactScore;
	data.vulnerabilities[0].cve.configurations[0].nodes[0].cpeMatch.forEach(
		(node) => {
			const row = document.createElement('tr');
			const cell1 = document.createElement('td');
			cell1.textContent = node.criteria;
			const cell2 = document.createElement('td');
			cell2.textContent = node.matchCriteriaId;
			const cell3 = document.createElement('td');
			cell3.textContent = node.vulnerable;
			row.appendChild(cell1);
			row.appendChild(cell2);
			row.appendChild(cell3);
			document.getElementById('cpeTable').appendChild(row);
		}
	);
}

function fetchData() {
	fetch(`https://services.nvd.nist.gov/rest/json/cves/2.0?cveId=${ID}`)
		.then((response) => response.json())
		.then((data) => {
			console.log(data);
			data = data;
			renderData(data);
		})
		.catch((error) => {
			console.error(error);
		});
}

fetchData(ID);
